模块化主要解决两个问题，"命名冲突"、"文件依赖"
## 基于nodejs环境
CommonJs 同步模块加载
 *定义模块--加载模块
    module.exports/exports.xxx--require

## 基于浏览器环境
1).AMD 异步模块定义 如：requireJs
 *定义模块
    define(['module1'], function(module1) {
    ...
    return {
    // 返回的接口
    }
    })
 *加载模块
    require(['m1'], functino(m1) {}, function(err) {})
2).CMD 如sea.js
 *定义模块、使用模块:
    define(function(require, exports, module) {
      // 通过 require 引入依赖
       var otherModule = require('./otherModule');
       // 通过 exports 对外提供接口
       exports.myModule = function () {};
       // 或者通过 module.exports 提供整个接口
       module.exports = function () {};
    })
3).ES6模块
 *定义模块、输出变量
   export default XXX
   export XXX
 *使用模块
   import
